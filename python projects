import torch
import numpy as np
import os

torch_path = os.path.dirname(torch.__file__)
print(torch_path)
print(torch.version.cuda)
print(torch.cuda.is_available())
x = torch.rand(5, 3)
print(x)
data = [[1, 2],[3, 4]]
x_data = torch.tensor(data)
np_array = np.array(data)
x_np = torch.from_numpy(np_array)
x_ones = torch.ones_like(x_data) # retains the properties of x_data
x_rand = torch.rand_like(x_data, dtype=torch.float) # overrides the datatype of x_data
shape = (2,3,)
rand_tensor = torch.rand(shape)
ones_tensor = torch.ones(shape)
zeros_tensor = torch.zeros(shape)

##print(f"Random Tensor: \n {rand_tensor} \n")
"""                  print(f"Ones Tensor: \n {ones_tensor} \n")
print(f"Zeros Tensor: \n {zeros_tensor}")                """

tensor = torch.ones(4, 4)
if torch.cuda.is_available():
  tensor = tensor.to('cuda')
  print(f"cuda is enabled")

print('First row: ',tensor[0])
print('First column: ', tensor[:, 0])
print('Last column:', tensor[..., -1])
tensor[:,1] = 0
print(tensor)


print(torch.__version__)
